from tkinter import *
import random
import time

class Ball:
    def __init__(self,canvas,paddle,score,color):
        self.canvas = canvas
        self.paddle = paddle
        self.score = score
        self.id = canvas.create_oval(10,10,25,25, fill=color)
        start_1 = [40,60,90,120,150,180,200,245,290,350,400,455]
        random.shuffle(start_1)
        self.starting_point_x = start_1[0]
        self.canvas.move(self.id,  self.starting_point_x, 100)
        starts = [-3, -2, - 1, 1, 2, 3]
        random.shuffle(starts)
        self.x = starts[0]
        self.y = -1
        self.canvas_height = self.canvas.winfo_height()
        self.canvas_width = self.canvas.winfo_width()
        self.hit_bottom = False

    def hit_paddle(self, pos):
        paddle_pos = self.canvas.coords(self.paddle.id)
        if pos[2] >= paddle_pos[0] and pos[0] <= paddle_pos[2]:
            if pos[3] >= paddle_pos[1] and pos[3] <= paddle_pos[3]:
                self.score.hit()
                return True
        return False
              
    def draw(self):
        self.canvas.move(self.id, self.x,self.y)
        pos = self.canvas.coords(self.id)        
        if pos[1] <= 0 or pos[3] >= self.canvas_height:
            self.y = -self.y                   
        if pos[3] >= self.canvas_height:
            self.hit_bottom = True
            time.sleep(1)
            canvas.create_text(250, 120, text='Конец игры!', font=('Times', 33), fill='red')
        if self.hit_paddle(pos) == True:
            self.y = (self.y+1)*-1
        if pos[0] <= 0 or pos[2] >= self.canvas_width:
            self.x = -self.x           
        
        
class Paddle:
    def __init__(self, canvas, color):
        self.canvas = canvas
        self.id = canvas.create_rectangle(0,0,100,10, fill=color)
        self.canvas.move(self.id,200,300)
        self.x = 0
        self.canvas_width = self.canvas.winfo_width()
        self.canvas.bind_all('<KeyPress-Left>', self.turn_left)
        self.canvas.bind_all('<KeyPress-Right>', self.turn_right)
        self.started = False
        self.canvas.bind_all('<Button-1>', self.start_game)

    def draw(self):
        self.canvas.move(self.id, self.x,0)
        pos = self.canvas.coords(self.id)
        if pos[0] <= 0:
            self.x = 0
        elif pos[2] >= self.canvas_width:
            self.x = 0

    def turn_left(self, evt):
        self.x = -2
        
    def turn_right(self, evt):
        self.x = 2

    def start_game(self, evt):
        canvas.delete(text)
        canvas.delete(text1)
        self.started = True

class Score:
    def __init__(self,canvas,color):
        self.score = 0
        self.canvas = canvas
        self.id = canvas.create_text(450, 10, text=self.score, font=('Times'),fill=color)
    def hit(self):
        self.score += 1
        self.canvas.itemconfig(self.id, text=self.score)

tk = Tk()
tk.title("Игра")  
tk.resizable(0,0)  
tk.wm_attributes("-topmost",1) 
canvas = Canvas(tk, width=500, height=400, bd=0, highlightthickness=0)
canvas.pack()
tk.update()
text = canvas.create_text(250, 150, text='Да начнется игра!', font=('Times',15))
text1 = canvas.create_text(250, 200, text='Нажми левую кнопку мыши! ;)', font=('Times',15))
tk.update()

score = Score(canvas, 'green')
paddle = Paddle(canvas, 'blue')
ball = Ball(canvas,paddle,score, "red")

while not ball.hit_bottom:
    if paddle.started == True:
        ball.draw()
        paddle.draw()                        
    tk.update_idletasks()
    tk.update()
    time.sleep(0.01)
time.sleep(3)
